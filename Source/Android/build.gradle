buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:0.8.+'
	}
}
apply plugin: 'android'

dependencies {
	compile fileTree(dir: 'libs', include: '*.jar')
	compile fileTree(dir: "$buildDir/native-libs", include: 'native-libs.jar')
}

android {
	compileSdkVersion 19
	buildToolsVersion "19.0.1"

	task nativeLibsToJar(type: Zip, description: 'create a jar archive of the native libs') {
		destinationDir file("$buildDir/native-libs")
		baseName 'native-libs'
		extension 'jar'
		from fileTree(dir: 'libs', include: '**/*.so')
		into 'lib/'
	}

	tasks.withType(Compile) {
		compileTask -> compileTask.dependsOn(nativeLibsToJar)
	}

	sourceSets {
		main {
			manifest.srcFile 'AndroidManifest.xml'
			java.srcDirs = ['src']
			resources.srcDirs = ['src']
			aidl.srcDirs = ['src']
			renderscript.srcDirs = ['src']
			res.srcDirs = ['res']
			assets.srcDirs = ['assets']
		}

		// Move the tests to tests/java, tests/res, etc...
		instrumentTest.setRoot('tests')

		// Move the build types to build-types/<type>
		// For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
		// This moves them out of them default location under src/<type>/... which would
		// conflict with src/ being used by the main source set.
		// Adding new build types or product flavors should be accompanied
		// by a similar customization.
		debug.setRoot('build-types/debug')
		release.setRoot('build-types/release')
	}

	signingConfigs {
		release {
			if (System.getenv("KEYSTORE") != null)
			{
				storeFile file(System.getenv("KEYSTORE"))
				storePassword System.getenv("KEYSTORE_PASSWORD")
				keyAlias System.getenv("KEY_ALIAS")
				keyPassword System.getenv("KEY_PASSWORD")
			}
		}
	}

	buildTypes {
		release {
			signingConfig signingConfigs.release
		}
	}
}
